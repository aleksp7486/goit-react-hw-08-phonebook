{"version":3,"file":"static/js/661.ed7688b1.chunk.js","mappings":"qOAGaA,EAAYC,EAAAA,GAAAA,IAAH,iDACH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPC,EAAQJ,EAAAA,GAAAA,MAAH,uFAEH,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,IACG,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPI,GAAQP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,sIAGC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACD,SAAAF,GAAC,OAAIA,EAAEC,MAAMO,MAAMC,KAAlB,IACG,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,OAAOC,KAAnB,IAGXC,GAAQb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,kFACH,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,IAEE,SAAAL,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGNY,EAAMf,EAAAA,GAAAA,OAAH,8dAKH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAA0B,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAC9B,SAAAF,GAAC,OAAIA,EAAEC,MAAMS,OAAOK,KAAnB,IAEU,SAAAf,GAAC,OAAIA,EAAEC,MAAMS,OAAOM,OAAnB,IAEJ,SAAAhB,GAAC,OAAIA,EAAEC,MAAMO,MAAMS,MAAlB,IAQA,SAAAjB,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGG,SAAAF,GAAC,OAAIA,EAAEC,MAAMS,OAAOQ,SAAnB,I,uCC1CnBC,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,KAAMI,EAAAA,KAAaE,WACnBL,MAAOG,EAAAA,KAEJH,MAAM,wBACNK,SAAS,oBACZJ,SAAUE,EAAAA,KAEPE,SAAS,yBACTC,IAAI,EAAG,sDACPC,QAAQ,WAAY,8CA6DzB,EA1DqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MAajB,OACE,SAAC,KAAD,CACEX,cAAeA,EACfY,iBAAkBR,EAClBS,SAfiB,SAAC,EAAD,GAA+C,IAA5CZ,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcW,EAAgB,EAAhBA,UACjDJ,GACEK,EAAAA,EAAAA,IAAS,CACPd,KAAMA,EACNC,MAAOA,EACPC,SAAUA,KAGdW,GACD,EAGC,UAKE,UAAC,KAAD,CAAME,YAAU,EAAhB,WACE,UAACrC,EAAD,YACE,SAACK,EAAD,CAAOiC,QAAQ,UAAf,uBACA,SAAC9B,EAAD,CACE+B,KAAK,OACLjB,KAAK,OACLkB,GAAG,UACHC,YAAY,gBAEd,SAAC3B,EAAD,CAAOQ,KAAK,OAAOoB,UAAU,UAE/B,UAAC1C,EAAD,YACE,SAACK,EAAD,CAAOiC,QAAQ,WAAf,oBACA,SAAC9B,EAAD,CACE+B,KAAK,QACLjB,KAAK,QACLkB,GAAG,WACHC,YAAY,iBAEd,SAAC3B,EAAD,CAAOQ,KAAK,QAAQoB,UAAU,UAEhC,UAAC1C,EAAD,YACE,SAACK,EAAD,CAAOiC,QAAQ,UAAf,uBACA,SAAC9B,EAAD,CACE+B,KAAK,WACLjB,KAAK,WACLkB,GAAG,UACHC,YAAY,oBAEd,SAAC3B,EAAD,CAAOQ,KAAK,WAAWoB,UAAU,UAGnC,SAAC1B,EAAD,CAAKuB,KAAK,SAAV,0BAIP,ECvED,EARqB,WACnB,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const InputWrap = styled.div`\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: ${p => p.theme.fontSizes.s};\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  width: 100%;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.small};\n  outline: 1px solid ${p => p.theme.colors.black};\n`;\n\nexport const Error = styled(ErrorMessage)`\n  font-size: ${p => p.theme.fontSizes.s};\n  color: red;\n  padding-left: ${p => p.theme.space[2]}px;\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  padding: ${p => p.theme.space[3]}px ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.white};\n  font-weight: 700;\n  background-color: ${p => p.theme.colors.primary};\n  border: none;\n  border-radius: ${p => p.theme.radii.normal};\n\n  cursor: pointer;\n  transition: background-color 200ms ease-in;\n  span {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: ${p => p.theme.space[2]}px;\n  }\n  :hover {\n    background-color: ${p => p.theme.colors.secondary};\n  }\n`;\n","import { InputWrap, Label, Input, Btn, Error } from './RegisterForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup\n    .string()\n    .email('Invalid email format')\n    .required('Mail is required'),\n  password: yup\n    .string()\n    .required('No password provided.')\n    .min(6, 'Password is too short - should be 6 chars minimum.')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const onFormSubmit = ({ name, email, password }, { resetForm }) => {\n    dispatch(\n      register({\n        name: name,\n        email: email,\n        password: password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={onFormSubmit}\n    >\n      <Form noValidate>\n        <InputWrap>\n          <Label htmlFor=\"regName\">Username</Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            id=\"regName\"\n            placeholder=\"Enter name\"\n          />\n          <Error name=\"name\" component=\"p\" />\n        </InputWrap>\n        <InputWrap>\n          <Label htmlFor=\"regEmail\">Email</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id=\"regEmail\"\n            placeholder=\"Enter email\"\n          />\n          <Error name=\"email\" component=\"p\" />\n        </InputWrap>\n        <InputWrap>\n          <Label htmlFor=\"regPass\">Password</Label>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id=\"regPass\"\n            placeholder=\"Enter password\"\n          />\n          <Error name=\"password\" component=\"p\" />\n        </InputWrap>\n\n        <Btn type=\"submit\">Register</Btn>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["InputWrap","styled","p","theme","space","Label","fontSizes","s","Input","Field","radii","small","colors","black","Error","ErrorMessage","Btn","white","primary","normal","secondary","initialValues","name","email","password","schema","yup","shape","required","min","matches","dispatch","useDispatch","validationSchema","onSubmit","resetForm","register","noValidate","htmlFor","type","id","placeholder","component"],"sourceRoot":""}