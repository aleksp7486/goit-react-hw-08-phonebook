{"version":3,"file":"static/js/582.1acdc8fa.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contactsList;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.value;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const SectionBox = styled.section`\n  padding: ${p => p.theme.space[3]}px 0;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title, SectionBox } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionBox>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionBox>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const InputWrap = styled.div`\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-size: ${p => p.theme.fontSizes.s};\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const Input = styled(Field)`\n  position: relative;\n  display: block;\n  width: 100%;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.small};\n  outline: 1px solid ${p => p.theme.colors.black};\n`;\n\nexport const Error = styled(ErrorMessage)`\n  font-size: ${p => p.theme.fontSizes.s};\n  color: red;\n  padding-left: ${p => p.theme.space[2]}px;\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  padding: ${p => p.theme.space[3]}px ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.white};\n  font-weight: 700;\n  background-color: ${p => p.theme.colors.primary};\n  border: none;\n  border-radius: ${p => p.theme.radii.normal};\n\n  cursor: pointer;\n  transition: background-color 200ms ease-in;\n  span {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: ${p => p.theme.space[2]}px;\n  }\n  :hover {\n    background-color: ${p => p.theme.colors.secondary};\n  }\n`;\n","import { BsFillPersonPlusFill } from 'react-icons/bs';\nimport { Formik, Form } from 'formik';\nimport { InputWrap, Label, Input, Btn, Error } from './ContactForm.styled';\nimport * as yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required(),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onFormSubmit = ({ name, number }, { resetForm }) => {\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    if (contacts.find(contact => contact.number === number)) {\n      alert(`Number ${number} already exists`);\n      return;\n    }\n    const newContact = {\n      name,\n      number,\n    };\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={onFormSubmit}\n    >\n      <Form noValidate>\n        <InputWrap>\n          <Label htmlFor=\"name\">Name:</Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Enter name\"\n            required\n          />\n          <Error name=\"name\" component=\"p\" />\n        </InputWrap>\n\n        <InputWrap>\n          <Label htmlFor=\"number\">Number: </Label>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            id=\"number\"\n            placeholder=\"Enter phone number\"\n            required\n          />\n          <Error name=\"number\" component=\"p\" />\n        </InputWrap>\n\n        <Btn type=\"submit\">\n          <span>\n            <BsFillPersonPlusFill />\n          </span>\n          Add contact\n        </Btn>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const Text = styled.p`\n  line-height: 1;\n  overflow: hidden;\n`;\n\nexport const Icon = styled.span`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport const Phone = styled.span`\n  padding-left: ${p => p.theme.space[3]}px;\n`;\n\nexport const Btn = styled.button`\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  padding: ${p => p.theme.space[3]}px ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.primary};\n  cursor: pointer;\n  transition: background-color 200ms ease-in;\n  :hover {\n    background-color: ${p => p.theme.colors.delete};\n  }\n`;\n","import { Item, Text, Icon, Phone, Btn } from './ContactList.styled';\nimport { BsFillPersonFill, BsFillPersonXFill } from 'react-icons/bs';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n// import { useMemo } from 'react';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n  return (\n    <ul>\n      {filteredContacts.map(({ name, number, id }) => {\n        return (\n          <Item key={name} id={id}>\n            <Icon>\n              <BsFillPersonFill />\n            </Icon>\n            <Text>\n              {name}:<Phone>{number}</Phone>\n            </Text>\n            <Btn onClick={() => dispatch(deleteContact(id))}>\n              <BsFillPersonXFill />\n            </Btn>\n          </Item>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\nexport const Board = styled.div`\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  display: block;\n  border-radius: ${p => p.theme.radii.small};\n  outline: 1px solid ${p => p.theme.colors.black};\n`;\n","import { Label, Input, Board } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n  const onHandelChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <Board>\n      <Label htmlFor=\"filter\">Find contacts:</Label>\n      <Input\n        onChange={onHandelChange}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        id=\"filter\"\n        placeholder=\"Search\"\n      />\n    </Board>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport Section from 'components/Section';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport Loader from 'components/Loader';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Section title=\"Phone-book\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        {isLoading && !error && <Loader />}\n        {!isLoading && <ContactList />}\n      </Section>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","contactsList","selectIsLoading","isLoading","selectError","error","selectFilter","filter","value","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","SectionBox","styled","p","theme","space","Title","title","children","InputWrap","Label","fontSizes","s","Input","Field","radii","small","colors","black","Error","ErrorMessage","Btn","white","primary","normal","secondary","initialValues","number","schema","yup","shape","required","dispatch","useDispatch","useSelector","validationSchema","onSubmit","resetForm","find","alert","newContact","addContact","noValidate","htmlFor","type","id","placeholder","component","Item","Text","Icon","accent","Phone","delete","filteredContacts","map","onClick","deleteContact","Board","onChange","e","changeFilter","target","useEffect","fetchContacts","Loader"],"sourceRoot":""}